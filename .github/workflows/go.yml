name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Prepare build environment
      run: |
        mkdir build
        export B_SHA_SUB="$(echo "$GITHUB_SHA" | cut -c1-8)"
        cd cli && sudo make && cd ..
        export B_CLIDIR="./cli"
        export B_CLINAME="$B_CLIDIR/tanem.go"
        export CGO_LDFLAGS="-X github.com/ii64/tanem/cmd.GIT_COMMIT=$B_SHA_SUB"
        export B_HEADERFILE="$B_CLIDIR/deps/include/."
        export B_LIBSFILE="$B_CLIDIR/deps/lib/."
        sudo cp -a "$B_HEADERFILE" /usr/include
        sudo cp -a "$B_LIBSFILE" /usr/lib
        go mod download
        echo "Code go mod: $?"

    - name: Build linux amd64
      run: |
        mkdir build/linux_amd64
        echo $CGO_LDFLAGS
        GOOS=linux GOARCH=amd64 go build -x -v -o build/linux_amd64/tanem $B_CLINAME
        zip -r ./tanem-linux-amd64.zip --junk-paths build/linux_amd64/*
        zip -r ./tanem-linux-amd64-lib.zip --junk-paths "$B_CLIDIR/deps/lib/*"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        tag_name: ${{ github.ref }}_${{ github.sha }}
        release_name: ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
        draft: false
        prerelease: false

                
    - name: Uploading linux amd64 binary
      id: upload_release_linux_amd64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tanem-linux-amd64.zip
        asset_name: tanem-linux-amd64.zip
        asset_content_type: application/zip
    - name: Uploading linux amd64 library
      id: upload_release_linux_amd64_lib
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tanem-linux-amd64-lib.zip
        asset_name: tanem-linux-amd64-lib.zip
        asset_content_type: application/zip

        